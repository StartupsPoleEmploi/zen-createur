version: '2.4'
services:
  nginx:
    container_name: 'zen-createur-nginx_${ZEN_ENV}'
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - "api"
    environment:
      - TZ=Europe/Paris
    volumes:
      - './api/extracts:/home/extracts'
    networks:
      zc_network:
        ipv4_address: 172.0.0.10

  api:
    container_name: 'zen-createur-api_${ZEN_ENV}'
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./dockerfile_api
      args:
        NODE_ENV: ${NODE_ENV}
    expose:
      - '8080'
      - '8081'
    networks:
      zc_network:
        ipv4_address: 172.0.0.100
    depends_on:
      - 'db'
    env_file:
      - .env.${ZEN_ENV}
    environment:
      - TZ=Europe/Paris

  db:
    container_name: 'zen-createur-db_${ZEN_ENV}'
    image: postgres:10.4
    restart: always
    networks:
      zc_network:
        ipv4_address: 172.0.0.150
    volumes:
      - postgres-data:/var/lib/postgresql
    env_file:
      - .env.${ZEN_ENV}
    environment:
      - TZ=Europe/Paris

networks:
  zc_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.0.0.0/16
          gateway: 172.0.0.1


volumes:
  postgres-data:
