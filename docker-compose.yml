version: '2.4'
services:
  nginx:
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    cpus: '0.50'
    mem_limit: 300M
    depends_on:
      - "api"
    environment:
      - TZ=Europe/Paris
    volumes:
      - './api/extracts:/home/extracts'
    networks:
      zc_network:
        ipv4_address: 172.0.0.10

  api:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./dockerfile_api
      args:
        NODE_ENV: ${NODE_ENV}
    cpus: '2.5'
    mem_limit: 4G
    expose:
      - '8080'
      - '8081'
    networks:
      zc_network:
        ipv4_address: 172.0.0.100
    depends_on:
      - 'db'
    env_file:
      - .env
    environment:
      - TZ=Europe/Paris

  db:
    image: postgres:10.4
    restart: always
    cpus: '4.0'
    mem_limit: 8G
    networks:
      zc_network:
        ipv4_address: 172.0.0.150
    volumes:
      - postgres-data:/var/lib/postgresql
    env_file:
      - .env
    environment:
      - TZ=Europe/Paris
    command:
      - "postgres"
      - "-c"
      - "max_connections=200"
      - "-c"
      - "shared_buffers=2GB"
      - "-c"
      - "effective_cache_size=6GB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "checkpoint_completion_target=0.7"
      - "-c"
      - "wal_buffers=16MB"
      - "-c"
      - "default_statistics_target=100"
      - "-c"
      - "random_page_cost=4"
      - "-c"
      - "effective_io_concurrency=2"
      - "-c"
      - "work_mem=5242kB"
      - "-c"
      - "min_wal_size=1GB"
      - "-c"
      - "max_wal_size=4GB"
      - "-c"
      - "max_worker_processes=4"
      - "-c"
      - "max_parallel_workers_per_gather=2"
      - "-c"
      - "max_parallel_workers=4"

networks:
  zc_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.0.0.0/16
          gateway: 172.0.0.1


volumes:
  postgres-data:
