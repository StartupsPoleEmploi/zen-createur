FROM node:12.16.1
WORKDIR /home/api
ARG NODE_ENV=$NODE_ENV

RUN apt-get update

# popper-utils for pdfinfo
RUN apt-get install -y pdftk poppler-utils=0.48.0-2+deb9u2 && \
    apt-get update && \
    apt-get install -y ghostscript=9.26a~dfsg-0+deb9u6

# For puppeteer in Docker : https://github.com/puppeteer/puppeteer/blob/master/docs/troubleshooting.md#chrome-headless-doesnt-launch-on-unix
RUN apt-get install -y gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget

# in development the COPY will be overwrite by the volume declare into 
# docker-compose.dev.yml './api:/home/api' to let us have autoreload
COPY ./api .
RUN if [ "$NODE_ENV" = "production" ] || [ "$NODE_ENV" = "qa" ]; then \
        yarn install --production; \
    fi


CMD if [ "$NODE_ENV" = "production" ] || [ "$NODE_ENV" = "qa" ]; then \
        yarn run knex migrate:latest && \
        yarn run production:api; \
    else \
        yarn install && \
        yarn run knex migrate:latest && \
        yarn start:api; \
    fi
